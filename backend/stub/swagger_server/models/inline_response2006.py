# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponse2006(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, condition: str=None, count: int=None):  # noqa: E501
        """InlineResponse2006 - a model defined in Swagger

        :param condition: The condition of this InlineResponse2006.  # noqa: E501
        :type condition: str
        :param count: The count of this InlineResponse2006.  # noqa: E501
        :type count: int
        """
        self.swagger_types = {
            'condition': str,
            'count': int
        }

        self.attribute_map = {
            'condition': 'condition',
            'count': 'count'
        }
        self._condition = condition
        self._count = count

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2006':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_6 of this InlineResponse2006.  # noqa: E501
        :rtype: InlineResponse2006
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition(self) -> str:
        """Gets the condition of this InlineResponse2006.


        :return: The condition of this InlineResponse2006.
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition: str):
        """Sets the condition of this InlineResponse2006.


        :param condition: The condition of this InlineResponse2006.
        :type condition: str
        """

        self._condition = condition

    @property
    def count(self) -> int:
        """Gets the count of this InlineResponse2006.


        :return: The count of this InlineResponse2006.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this InlineResponse2006.


        :param count: The count of this InlineResponse2006.
        :type count: int
        """

        self._count = count
