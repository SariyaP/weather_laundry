# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponse2002(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, hour: int=None, avg_temp: float=None, avg_light: float=None, avg_humidity: float=None):  # noqa: E501
        """InlineResponse2002 - a model defined in Swagger

        :param hour: The hour of this InlineResponse2002.  # noqa: E501
        :type hour: int
        :param avg_temp: The avg_temp of this InlineResponse2002.  # noqa: E501
        :type avg_temp: float
        :param avg_light: The avg_light of this InlineResponse2002.  # noqa: E501
        :type avg_light: float
        :param avg_humidity: The avg_humidity of this InlineResponse2002.  # noqa: E501
        :type avg_humidity: float
        """
        self.swagger_types = {
            'hour': int,
            'avg_temp': float,
            'avg_light': float,
            'avg_humidity': float
        }

        self.attribute_map = {
            'hour': 'hour',
            'avg_temp': 'avg_temp',
            'avg_light': 'avg_light',
            'avg_humidity': 'avg_humidity'
        }
        self._hour = hour
        self._avg_temp = avg_temp
        self._avg_light = avg_light
        self._avg_humidity = avg_humidity

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2002':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_2 of this InlineResponse2002.  # noqa: E501
        :rtype: InlineResponse2002
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hour(self) -> int:
        """Gets the hour of this InlineResponse2002.


        :return: The hour of this InlineResponse2002.
        :rtype: int
        """
        return self._hour

    @hour.setter
    def hour(self, hour: int):
        """Sets the hour of this InlineResponse2002.


        :param hour: The hour of this InlineResponse2002.
        :type hour: int
        """

        self._hour = hour

    @property
    def avg_temp(self) -> float:
        """Gets the avg_temp of this InlineResponse2002.


        :return: The avg_temp of this InlineResponse2002.
        :rtype: float
        """
        return self._avg_temp

    @avg_temp.setter
    def avg_temp(self, avg_temp: float):
        """Sets the avg_temp of this InlineResponse2002.


        :param avg_temp: The avg_temp of this InlineResponse2002.
        :type avg_temp: float
        """

        self._avg_temp = avg_temp

    @property
    def avg_light(self) -> float:
        """Gets the avg_light of this InlineResponse2002.


        :return: The avg_light of this InlineResponse2002.
        :rtype: float
        """
        return self._avg_light

    @avg_light.setter
    def avg_light(self, avg_light: float):
        """Sets the avg_light of this InlineResponse2002.


        :param avg_light: The avg_light of this InlineResponse2002.
        :type avg_light: float
        """

        self._avg_light = avg_light

    @property
    def avg_humidity(self) -> float:
        """Gets the avg_humidity of this InlineResponse2002.


        :return: The avg_humidity of this InlineResponse2002.
        :rtype: float
        """
        return self._avg_humidity

    @avg_humidity.setter
    def avg_humidity(self, avg_humidity: float):
        """Sets the avg_humidity of this InlineResponse2002.


        :param avg_humidity: The avg_humidity of this InlineResponse2002.
        :type avg_humidity: float
        """

        self._avg_humidity = avg_humidity
