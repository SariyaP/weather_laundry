# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class KidbrightData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, time: datetime=None, temp: float=None, light: float=None, humidity: float=None):  # noqa: E501
        """KidbrightData - a model defined in Swagger

        :param id: The id of this KidbrightData.  # noqa: E501
        :type id: int
        :param time: The time of this KidbrightData.  # noqa: E501
        :type time: datetime
        :param temp: The temp of this KidbrightData.  # noqa: E501
        :type temp: float
        :param light: The light of this KidbrightData.  # noqa: E501
        :type light: float
        :param humidity: The humidity of this KidbrightData.  # noqa: E501
        :type humidity: float
        """
        self.swagger_types = {
            'id': int,
            'time': datetime,
            'temp': float,
            'light': float,
            'humidity': float
        }

        self.attribute_map = {
            'id': 'id',
            'time': 'time',
            'temp': 'temp',
            'light': 'light',
            'humidity': 'humidity'
        }
        self._id = id
        self._time = time
        self._temp = temp
        self._light = light
        self._humidity = humidity

    @classmethod
    def from_dict(cls, dikt) -> 'KidbrightData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KidbrightData of this KidbrightData.  # noqa: E501
        :rtype: KidbrightData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this KidbrightData.


        :return: The id of this KidbrightData.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this KidbrightData.


        :param id: The id of this KidbrightData.
        :type id: int
        """

        self._id = id

    @property
    def time(self) -> datetime:
        """Gets the time of this KidbrightData.


        :return: The time of this KidbrightData.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """Sets the time of this KidbrightData.


        :param time: The time of this KidbrightData.
        :type time: datetime
        """

        self._time = time

    @property
    def temp(self) -> float:
        """Gets the temp of this KidbrightData.


        :return: The temp of this KidbrightData.
        :rtype: float
        """
        return self._temp

    @temp.setter
    def temp(self, temp: float):
        """Sets the temp of this KidbrightData.


        :param temp: The temp of this KidbrightData.
        :type temp: float
        """

        self._temp = temp

    @property
    def light(self) -> float:
        """Gets the light of this KidbrightData.


        :return: The light of this KidbrightData.
        :rtype: float
        """
        return self._light

    @light.setter
    def light(self, light: float):
        """Sets the light of this KidbrightData.


        :param light: The light of this KidbrightData.
        :type light: float
        """

        self._light = light

    @property
    def humidity(self) -> float:
        """Gets the humidity of this KidbrightData.


        :return: The humidity of this KidbrightData.
        :rtype: float
        """
        return self._humidity

    @humidity.setter
    def humidity(self, humidity: float):
        """Sets the humidity of this KidbrightData.


        :param humidity: The humidity of this KidbrightData.
        :type humidity: float
        """

        self._humidity = humidity
